buildscript {
    project.ext {
        bootVersion = '1.3.2.RELEASE'
        cloudVersion = '1.0.4.RELEASE'
    }
    repositories {
        maven { url "http://localhost:8081/nexus/content/groups/public/" }
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${project.bootVersion}"
        classpath 'se.transmode.gradle:gradle-docker:1.2'
        classpath "io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE"
    }
}

apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'java'
apply plugin: 'docker'

apply plugin: "io.spring.dependency-management"

springBoot {
    requiresUnpack = ['com.netflix.eureka:eureka-core', 'com.netflix.eureka:eureka-client']
}

jar {
    baseName = 'sample-webservice-registry'
    version = '0.1.0'
}

repositories {
    maven { url "http://localhost:8081/nexus/content/groups/public/" }
    mavenCentral()
    jcenter()
}
dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:${project.bootVersion}")
    compile("org.springframework.boot:spring-boot-starter-actuator:${project.bootVersion}")
    compile("org.springframework.cloud:spring-cloud-config-client:${project.cloudVersion}")
    compile("org.springframework.cloud:spring-cloud-starter-eureka-server:${project.cloudVersion}")

    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompile 'org.springframework:spring-test:4.2.4.RELEASE'
}

group = 'anilallewar'

bootRepackage {
    mainClass = 'com.rohitghatol.microservices.registry.Application'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

task distDocker(type: Docker) {
    exposePort 8761
    setEnvironment 'JAVA_OPTS', '-Dspring.profiles.active=docker'
}

docker {
    useApi true
    hostUrl 'http://192.168.59.103:2375'
    baseImage = 'java:8'
}

task createWrapper(type: Wrapper) {
    gradleVersion = '2.10'
}
